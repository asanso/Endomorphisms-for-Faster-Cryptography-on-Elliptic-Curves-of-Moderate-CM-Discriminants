from sage.all import FractionField
from sage.matrix.constructor import Matrix
from sage.modules.free_module_element import free_module_element as vector
from curve import WeierstrassCurve
from curve import PointWeierstrass

class GC256C(WeierstrassCurve):

    def __init__(self, p, a, b, r, cofactor,L):
        super().__init__(p, a,b, r, cofactor)
        self.a = a
        self.b = b
        self.D = -619
        self.L = L
        self.cofactor = cofactor
        self.r = r
        M = Matrix([[-L,1], [r,0]])
        self.N = M.LLL()
        self.N_inv = self.N**-1
        self.Fpxz = self.Fp['x', 'z']
        self.FpXZ = FractionField(self.Fpxz)
        x, z = self.FpXZ.gens()
        
        a0_map = 36*x**7 + 55316167225872031921444473724541166852400316851747103555234435954514737544270*x**6*z + 45332609756926846902563289572144994190116945147544921796572757247516049996091*x**5*z**2 + 28563446288068984159399475987302527097606982097604087042401840203107149143770*x**4*z**3 + 16570238300016905064758687615877074677083769305753762844238239958453767429582*x**3*z**4 + 2759064124929888990858392715967892027583724548283969838514453602250940502128*x**2*z**5 + 13125341399020961830462255553484438648173513764645997409039282320535310006253*x*z**6 + 29965229416848537228446610558512130117544335334956258355466603684999180717953*z**7
        b0_map = 57896044618658097711785492504343953926634992332820282019728792003486379838617*x**6 + 48355746935192789110093829789944515565965599918477736951039683725128529244852*x**5*z + 56193409519458831482197233416460055680531758263469304046821239571011278511853*x**4*z**2 + 44105693154188566969293632752788495915895319118190764975452928386448000329518*x**3*z**3 + 57536333777679075482344024208773253557521344236095115901279432518573956363330*x**2*z**4 + 46875673490453176560813995159274061046696659296899509330700612768294961885421*x*z**5 + 9500594169563354816284603217354074633002917460138168396866432135019556376171*z**6
        c0_map = x**6 + 30484582510047716409266203855631453820328616078958671664176463667381469565604*x**5*z + 41762569747782571677698033525027430632622643845417095288099212403479782778050*x**4*z**2 + 54142118680667001141062532758035750950347251278469084372699553811317945712103*x**3*z**3 + 17498350476013684159100569093379740648898190818640694399422628015208518066802*x**2*z**4 + 40280939884712370207019854181776225328751630706982050005637775864114957312491*x*z**5 + 36394192955383782270203800021922585167370273618345032768500051654347115967397*z**6

        a1_map = 36*x**7 + 5188740938183431071021834180328025070416085810407138440963177506798374503488*x**6*z + 22567287134412111187638595376529824097956624741648267963057812561052812114283*x**5*z**2 + 8079928597839834746568249100716587013273205931822105308125821300741326409030*x**4*z**3 + 19608391501196813695019527217760103190180360861471500011225770194089552212993*x**3*z**4 + 7526418832171512888568481857699179834896804246261140326950967999315807477758*x**2*z**5 + 56855078633392033187100725686704517748506674959480985887021618854537429459711*x*z**6 + 43150659473304307070942996041088616227558419119027232170264544838509848755420*z**7
        b1_map = 57896044618658097711785492504343953926634992332820282019728792003486379838617*x**6 + 32186463088840167706882376468860089774400230578049381004172914500887809522567*x**5*z + 45756010375172296556609923969848035378472035081853670900007375262760440132266*x**4*z**2 + 3875270978122127310657838360986157766237166784764308092770993407375947772326*x**3*z**3 + 994569068401525313508370704814376335808937386470454920544309605372802266241*x**2*z**4 + 33809582099040317247570758175479307117451952348858799104938469296130357799020*x*z**5 + 24688226991716568416491430830407619682394498510954904399533681101527939229458*z**6
        c1_map = x**6 + 19442813232280016767012437339790429783056555383451403407714130043174365343939*x**5*z + 25540687767809105733558384764651775166530397493297810572585853410475577209876*x**4*z**2 + 28286610061366852937156495951976453563416977340216390795982146424290651270670*x**3*z**3 + 3494684167748606615379457942007916231191043903269875914910177348746827222123*x**2*z**4 + 1761938708369226823615328238543736266771857078253457403177917192445695986166*x*z**5 + 54239604592297549743388013464596079558583433689616551456018435694249656597856*z**6

        a2_map = 36*x**7 + 11457858977581796881863324699721821791818651781902798901662912778193467500502*x**6*z + 35478892365519118370818511783480952189248890433009232332959093037848767365484*x**5*z**2 + 31173832377670774956637749342872549424620506106453181839713673680978044100646*x**4*z**3 + 41499305308246116846785587287407328321329562849388307623788375854594643985993*x**3*z**4 + 49061807774581016729929720447462464397568746965196668756503039593954896778928*x**2*z**5 + 3147095414849189388117686456467624228734059934331591479043508421881238365356*x*z**6 + 8393172121795952753628543798467142807428447954961921228776758792418816972181*z**7
        b2_map = 57896044618658097711785492504343953926634992332820282019728792003486379838617*x**6 + 34906039210297188704202104361561737675577128251056618585465220564803439181786*x**5*z + 19110340427513850372197828174988957784244502660612788485314480926042972872943*x**4*z**2 + 4165314474247325991818081546131289126248971750271130136012373058482895009916*x**3*z**3 + 25537751268656165793322699514537769593725936731284989665399959425057944765825*x**2*z**4 + 54608229373567497452515461296955439526529354368047169825399682591733540296126*x*z**5 + 53907809420617020552509869105908205951665645938201388036722929488294718860582*z**6
        c2_map = x**6 + 3534720783747166452928730825233603601252462123542871192808902688502961031858*x**5*z + 36021482176311138755563743374414939935440009022661340855888852095644216989220*x**4*z**2 + 43164903330049926540569886454682403502163271269335561016017033822163971828935*x**3*z**3 + 46574426357328638939233960248087692944715578806368430049747014105560078297926*x**2*z**4 + 10733282914685647931404433320042970690781708777470224061672540549011182534833*x*z**5 + 44237579940843034915513377206255218929221335177469680626264105473925550801104*z**6

        a3_map = 36*x**7 + 3163425747528159103706381048325905988392303875807956884865489503583025756042*x**6*z + 46664663799651458708386076464078596084057702895760162573091023334317677421870*x**5*z**2 + 40229508548638644693935228254790791143691520882088024855017212089241428169971*x**4*z**3 + 41265590161510083376040632252428320964158412190366184567402347314501513179131*x**3*z**4 + 26570343427507869368550684589488124189617329854112394050743546711996779280832*x**2*z**5 + 16951431690844497515789058679198948284205924534100721406173090252665171570554*x*z**6 + 53698729909532161696422044632800496084672951447409437047718891530808732313370*z**7
        b3_map = 57896044618658097711785492504343953926634992332820282019728792003486379838617*x**6 + 36615458747265855372722517294242206961317919265154207943460028703537751232190*x**5*z + 26371146143625886531447815317297737608328642405446871857873982293031562025903*x**4*z**2 + 18371580079794138799228882565091616030364877086800970211937064186445956225213*x**3*z**3 + 29871670682237558287180528052684447998909732737673850386886477433483776541254*x**2*z**4 + 10811164482694431456958422084879113740922725282078298684667642341644425010113*x*z**5 + 35482486344509883444759587846222621471328594725790542711828434505063866214459*z**6
        c3_map = x**6 + 35468789093277953021194089337330358121510059311051504481080525377517429218508*x**5*z + 47620555452903007674791198507331655660244618175525733150981160127219673140381*x**4*z**2 + 55910254317895975543042808573858321788538061444645702874025099477368255413110*x**3*z**3 + 34957042208843734029356633148513031764605925345424012937498235579714052317052*x**2*z**4 + 3945248271729717080241731689842271850656169313815506055199204539225935976472*x*z**5 + 24296300947466255635165547288712430122410754652634859803919681103551960478552*z**6
        
        a4_map = 36*x**7 + 32261191782606555048995909813322841549480168911250532069270192359175541324931*x**6*z + 5256686192150691487950663486093251574628300261800309596227168243969088292721*x**5*z**2 + 43548996530554004776270356149096341643776649830726745142610814593445664100357*x**4*z**3 + 5771687769773292465921118263344492986789045082705442137826772797138720598175*x**3*z**4 + 30662048625160713828589738012411823302007103093404791389780035428277943148481*x**2*z**5 + 29560926754093367415020415388091483065847525822141583749498347372668734064632*x*z**6 + 35173201633089941132315228015263699092728965249947861480786021843492908601432*z**7
        b4_map = 57896044618658097711785492504343953926634992332820282019728792003486379838617*x**6 + 41651728258678664516646173190449969130122200071667479009573728447929291917852*x**5*z + 2862172883818804823182360760339794306081779308817719464900908658743061368377*x**4*z**2 + 27029897647939709287859477925137580030420886111853575370301762485602592361770*x**3*z**3 + 7573780045538977106494256336108863465186089745056621007914677190359004186016*x**2*z**4 + 52652849052589346986899834836059427806974423978800877463807537119108799894865*x*z**5 + 52072505869502761814132118132285765448310015553338822964356826581604597943207*z**6
        c4_map = x**6 + 21803049217365606258394647565827617849881529701053172175715124678072524556290*x**5*z + 14854510724687027350665544694311949434698196516035568437302460191618641880022*x**4*z**2 + 46446543555973333432099916600049677961070045680517807512103040548230835014484*x**3*z**3 + 20308566222668554727480734733590036080558955211628888394983769654699275829736*x**2*z**4 + 15711834516916273513411746754020951123594828341632806776620008861787936789931*x*z**5 + 51221874149406199740285320403599759631307957215119274290649735306809420080935*z**6
 
        self.a_maps = [a0_map, a1_map, a2_map, a3_map, a4_map]
        self.b_maps = [b0_map, b1_map, b2_map, b3_map, b4_map]
        self.c_maps = [c0_map, c1_map, c2_map, c3_map, c4_map]

        self.iso_x = 27369033356786332732752554094175936550115002708795493871356620185211170754699
        self.iso_y = 39945056430064838485109378306479690889976459448754059732810597842265327704890
        
    def random_point(self):
        P = super().random_point()
        return GC256CPoint(P.X, P.Y,P.Z, self)
       
class GC256CPoint(PointWeierstrass):
      
        def __init__(self, x, y, z, curve):
            super().__init__(x, y, z, curve)

        def fast_scalar_mul(self, n):
            psiP = self.psi()
            beta = vector([n,0]) * self.curve.N_inv
            b = vector([int(beta[0]), int(beta[1])]) * self.curve.N
            k1 = n-b[0]
            k2 = -b[1]
            return self.multi_scalar_mul(k1, psiP, k2)

        def psi(self):
            x,y,z = self.X, self.Y, self.Z

            for i in range(5):
                new_x = self.curve.a_maps[i](x,z) 
                y = y* self.curve.b_maps[i](x,z) 
                z = z* self.curve.c_maps[i](x,z) 
                x = new_x

            return GC256CPoint(self.curve.iso_x*x,  self.curve.iso_y*y, z, self.curve)
