import sys
import os
parent_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), ".."))
sys.path.append(parent_dir)

from sage.all import FractionField
from sage.matrix.constructor import Matrix
from sage.modules.free_module_element import free_module_element as vector
from common.curve import WeierstrassCurve
from common.curve import PointWeierstrass

class GC256C(WeierstrassCurve):

    def __init__(self, p, a, b, r, cofactor,L):
        super().__init__(p, a,b, r, cofactor)
        self.a = a
        self.b = b
        self.D = -619
        self.L = L
        self.cofactor = cofactor
        self.r = r
        M = Matrix([[-L,1], [r,0]])
        self.N = M.LLL()
        self.N_inv = self.N**-1
        self.Fpxz = self.Fp['x', 'z']
        self.FpXZ = FractionField(self.Fpxz)
        x, z = self.FpXZ.gens()
        
        a0_map = 78364164096*x**7 + 30538071923239933622841356704571883356762394902133898521312580715116288341320*x**6*z + 30489568686824040505412982948471988865682479876482149371571866027871165654351*x**5*z**2 + 14388055391733688028818438371333561662406173066282525008333477658521081043951*x**4*z**3 + 14047102095717664212460193524265850303491723444221729751240796233313011636012*x**3*z**4 + 24870562878246863081311992259312514841088758685363898631418732423371649399541*x**2*z**5 + 54931852707869381252161174565406932453966511190547635654436539078421767162374*x*z**6 + 10850238956104269909412550858622875313080963057564977876610243441636897340695*z**7
        b0_map = 57896044618658097711785492504343953926634992332820282019728792003486379838617*x**6 + 48355746935192789110093829789944515565965599918477736951039683725128529244852*x**5*z + 56193409519458831482197233416460055680531758263469304046821239571011278511853*x**4*z**2 + 44105693154188566969293632752788495915895319118190764975452928386448000329518*x**3*z**3 + 57536333777679075482344024208773253557521344236095115901279432518573956363330*x**2*z**4 + 46875673490453176560813995159274061046696659296899509330700612768294961885421*x*z**5 + 9500594169563354816284603217354074633002917460138168396866432135019556376171*z**6
        c0_map = 2176782336*x**6 + 13714067468680686536586813798314542076940064821241559852198414354076911303524*x**5*z + 48942148609199941854000959359609322113152929022706448993852225588038075801466*x**4*z**2 + 23622783069891427792252230604382048739916319342562188020459304430716508716296*x**3*z**3 + 37787248045177914702886027255138314747265706483413251352673205502763864961629*x**2*z**4 + 54589889546757549098237428791127710858196891144714875186902351213426644974177*x*z**5 + 164670340583892844110730512910414212454967943361348518199385620377015958003*z**6

        a1_map = 78364164096*x**7 + 42882293334075053475340847675476613309795788514342004849078507586482502432233*x**6*z + 52477295517090053830851581831630834649121901869335570912649035055425567598605*x**5*z**2 + 26755903858576640484803433807148782037209156711235411160168385765570318049657*x**4*z**3 + 45371690845965210657412059998674033406292921769163544816039080457331826308409*x**3*z**4 + 46297193494100784070473179224454039943288312149511124396697764314093503044983*x**2*z**5 + 41445231683563293606852334856086844898737239855100432250853286950662601399107*x*z**6 + 34060727449950302888189070405103908399489793195019937056517945451344617426320*z**7
        b1_map = 57896044618658097711785492504343953926634992332820282019728792003486379838617*x**6 + 32186463088840167706882376468860089774400230578049381004172914500887809522567*x**5*z + 45756010375172296556609923969848035378472035081853670900007375262760440132266*x**4*z**2 + 3875270978122127310657838360986157766237166784764308092770993407375947772326*x**3*z**3 + 994569068401525313508370704814376335808937386470454920544309605372802266241*x**2*z**4 + 33809582099040317247570758175479307117451952348858799104938469296130357799020*x*z**5 + 24688226991716568416491430830407619682394498510954904399533681101527939229458*z**6
        c1_map = 2176782336*x**6 + 25314526739276292198670089867795442283592240930740173198472510767939749299448*x**5*z + 42972819125516960424427581477760709290122492947466131650023576639629785762936*x**4*z**2 + 2368204415454250034146792137540080015799669267970901893954448091025497109904*x**3*z**3 + 48642233311688572710344586905455253266476304831555541100225522143149973860564*x**2*z**4 + 2023903811009331381968081721588349714475463188005615140785038730392231426836*x*z**5 + 14376830742435285604536783899290140537433429327648924673637666635471446573913*z**6

        a2_map = 78364164096*x**7 + 32779689877389200357156644275969013005160473513370751582241657908503803351831*x**6*z + 7184649272077463137540068685111280270173480727763181559230301770630639910175*x**5*z**2 + 18168153585057016260300907697680499421305782375563520179588809240866244569522*x**4*z**3 + 17220752364909249737224506998796223114933539245580856837122642028471496738985*x**3*z**4 + 48858385594705107371747211111411983104961112341220401512478050979065611087779*x**2*z**5 + 45213611671069400858090147115058619934561333359103686657737075564944394557671*x*z**6 + 31247662911203455299321894754423293535239000659210102289994832316262073277562*z**7
        b2_map = 57896044618658097711785492504343953926634992332820282019728792003486379838617*x**6 + 34906039210297188704202104361561737675577128251056618585465220564803439181786*x**5*z + 19110340427513850372197828174988957784244502660612788485314480926042972872943*x**4*z**2 + 4165314474247325991818081546131289126248971750271130136012373058482895009916*x**3*z**3 + 25537751268656165793322699514537769593725936731284989665399959425057944765825*x**2*z**4 + 54608229373567497452515461296955439526529354368047169825399682591733540296126*x*z**5 + 53907809420617020552509869105908205951665645938201388036722929488294718860582*z**6
        c2_map = 2176782336*x**6 + 15384558095703113326756279911529572176246539014132035826661132942892024632238*x**5*z + 1797791979739597682190402746509606770562618708408865664644772281826796780763*x**4*z**2 + 46293940961847041424880999454031553983108677140659814107443450384703556431754*x**3*z**3 + 224041309890082814186170675823431244244918866289974962745578460604863213087*x**2*z**4 + 1127466323505814297235172862718967588758228664379420386703735763799698377375*x*z**5 + 54098492336904611447807538929639312336946282439085765821896204054487377522492*z**6

        a3_map = 78364164096*x**7 + 32494786621227755912403242120522268124203675011021153355909189885381418010097*x**6*z + 2169864982815565166196276381794091339435812533157230886424343792418830429977*x**5*z**2 + 28003760411527730061558902422729275237156337693471764502798855234494352038610*x**4*z**3 + 32225410020204745924976738062033842767955997766399279741392814417399470238603*x**3*z**4 + 3904228186151663840709442129686723897730874648934765237891408284211635096764*x**2*z**5 + 26335070634775163649086682258028524186904629784935289769249909720781130258882*x*z**6 + 53718805677786491213597408217150278615521531351468209310985857865336473590720*z**7
        b3_map = 57896044618658097711785492504343953926634992332820282019728792003486379838617*x**6 + 36615458747265855372722517294242206961317919265154207943460028703537751232190*x**5*z + 26371146143625886531447815317297737608328642405446871857873982293031562025903*x**4*z**2 + 18371580079794138799228882565091616030364877086800970211937064186445956225213*x**3*z**3 + 29871670682237558287180528052684447998909732737673850386886477433483776541254*x**2*z**4 + 10811164482694431456958422084879113740922725282078298684667642341644425010113*x*z**5 + 35482486344509883444759587846222621471328594725790542711828434505063866214459*z**6
        c3_map = 2176782336*x**6 + 5727303346588945806882214434265392497336351444707833317085987941590308679991*x**5*z + 30123282599424396966707096426969575101669350712217731407175116392017843763362*x**4*z**2 + 17802199024744190784751809756844077525026973738329300472442130691770119785059*x**3*z**3 + 10802969325006548353228958491004526465258738553311166885680952657275381217735*x**2*z**4 + 19319717101138403256269564815476803889556588251749318524985631812301920000769*x*z**5 + 48142740377816086076844206526127692596122225589801074650738567465276140753451*z**6
        
        a4_map = 78364164096*x**7 + 50954089908878320292344463639268959071614625654209035518133170595968349503551*x**6*z + 25405811094329829293141243567368454598729058724213825854362940483507287458019*x**5*z**2 + 23110762576452190600369711043638072404979236067614512861856612728616155699420*x**4*z**3 + 39991729352330143830092623136594372763789125697933239855123877576872190972193*x**3*z**4 + 13385405553170404932256932154157300331430183676490399565889409822500442576540*x**2*z**5 + 48336134330036518130020759197316638589180261497093055121036811992706082059699*x*z**6 + 46085865012556598197082183221193928900616981883712277807317943885200646481324*z**7
        b4_map = 57896044618658097711785492504343953926634992332820282019728792003486379838617*x**6 + 41651728258678664516646173190449969130122200071667479009573728447929291917852*x**5*z + 2862172883818804823182360760339794306081779308817719464900908658743061368377*x**4*z**2 + 27029897647939709287859477925137580030420886111853575370301762485602592361770*x**3*z**3 + 7573780045538977106494256336108863465186089745056621007914677190359004186016*x**2*z**4 + 52652849052589346986899834836059427806974423978800877463807537119108799894865*x*z**5 + 52072505869502761814132118132285765448310015553338822964356826581604597943207*z**6
        c4_map = 2176782336*x**6 + 15889402541022255547178163782732348455870265462488654824880341628654928692008*x**5*z + 49531067288726115812872548263282643574910497127734973928013294906699907299749*x**4*z**2 + 17776950210564389168025257498024717668880445589197083316760398113986006225104*x**3*z**3 + 46795678324489793322980132612720526255045361827939117919432113050075131390421*x**2*z**4 + 13709018517373391547096113462856881259038044435746570982055067227316154625107*x*z**5 + 57310469670409421667154190920590610560583423605554968956068023279744606937948*z**6
 
        self.a_maps = [a0_map, a1_map, a2_map, a3_map, a4_map]
        self.b_maps = [b0_map, b1_map, b2_map, b3_map, b4_map]
        self.c_maps = [c0_map, c1_map, c2_map, c3_map, c4_map]

        self.iso_x = 27369033356786332732752554094175936550115002708795493871356620185211170754699
        self.iso_y = 39945056430064838485109378306479690889976459448754059732810597842265327704890
        
    def random_point(self):
        P = super().random_point()
        return GC256CPoint(P.X, P.Y,P.Z, self)
       
class GC256CPoint(PointWeierstrass):
      
        def __init__(self, x, y, z, curve):
            super().__init__(x, y, z, curve)

        def fast_scalar_mul(self, n):
            psiP = self.psi()
            beta = vector([n,0]) * self.curve.N_inv
            b = vector([int(beta[0]), int(beta[1])]) * self.curve.N
            k1 = n-b[0]
            k2 = -b[1]
            return self.multi_scalar_mul(k1, psiP, k2)

        def psi(self):
            x,y,z = self.X, self.Y, self.Z

            for i in range(5):
                new_x = self.curve.a_maps[i](x,z) 
                y = y* self.curve.b_maps[i](x,z) 
                z = z* self.curve.c_maps[i](x,z) 
                x = new_x

            return GC256CPoint(self.curve.iso_x*x,  self.curve.iso_y*y, z, self.curve)
